{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","sortingColumn","e","sortByColumn","target","innerText","tableRows","querySelectorAll","tableDataToSort","i","length","cells","person","Name","Position","Age","Salary","push","sort","a","b","toNumberA","match","join","localeCompare","innerHTML","addEventListener"],"mappings":";AAAA,aA6CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3CA,IAAMA,EAAYC,SAASC,cAAc,SAEzC,SAASC,EAAcC,GAKhB,IAJCC,IAAAA,EAAeD,EAAEE,OAAOC,UACxBC,EAAgBP,EAAAA,SAASQ,iBAAiB,OAC1CC,EAAkB,GAEfC,EAAI,EAAGA,EAAIH,EAAUI,OAAS,EAAGD,IAAK,CACvCE,IAAAA,EAAQL,EAAUG,GAAGE,MACrBC,EAAS,GAEfA,EAAOC,KAAOF,EAAM,GAAGN,UACvBO,EAAOE,SAAWH,EAAM,GAAGN,UAC3BO,EAAOG,IAAMJ,EAAM,GAAGN,UACtBO,EAAOI,OAASL,EAAM,GAAGN,UAEzBG,EAAgBS,KAAKL,GAGF,WAAjBT,EACFK,EAAgBU,KAAK,SAACC,EAAGC,GAIhBC,OAHWF,EAAEH,OAAOM,MAAM,QAAQC,KAAK,IAC5BH,EAAEJ,OAAOM,MAAM,QAAQC,KAAK,MAKhDf,EAAgBU,KAAK,SAACC,EAAGC,GACvBD,OAAAA,EAAEhB,GAAcqB,cAAcJ,EAAEjB,MAG/B,IAAA,IAAIM,EAAI,EAAGA,EAAIH,EAAUI,OAAS,EAAGD,IAAK,CAC5BH,EAAUG,GAElBgB,UACDjB,eAAAA,OAAAA,EAAgBC,EAAI,GAAGI,KACvBL,qBAAAA,OAAAA,EAAgBC,EAAI,GAAGK,SACvBN,qBAAAA,OAAAA,EAAgBC,EAAI,GAAGM,IACvBP,qBAAAA,OAAAA,EAAgBC,EAAI,GAAGO,OAJ/B,gBASJlB,EAAU4B,iBAAiB,QAASzB","file":"main.d9be2576.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\n\nfunction sortingColumn(e) {\n  const sortByColumn = e.target.innerText;\n  const tableRows = [...document.querySelectorAll('tr')];\n  const tableDataToSort = [];\n\n  for (let i = 1; i < tableRows.length - 1; i++) {\n    const cells = tableRows[i].cells;\n    const person = {};\n\n    person.Name = cells[0].innerText;\n    person.Position = cells[1].innerText;\n    person.Age = cells[2].innerText;\n    person.Salary = cells[3].innerText;\n\n    tableDataToSort.push(person);\n  };\n\n  if (sortByColumn === 'Salary') {\n    tableDataToSort.sort((a, b) => {\n      const toNumberA = a.Salary.match(/\\d+/g).join('');\n      const toNumberB = b.Salary.match(/\\d+/g).join('');\n\n      return toNumberA - toNumberB;\n    });\n  } else {\n    tableDataToSort.sort((a, b) =>\n      a[sortByColumn].localeCompare(b[sortByColumn]));\n  }\n\n  for (let i = 1; i < tableRows.length - 1; i++) {\n    const tableRow = tableRows[i];\n\n    tableRow.innerHTML = `\n      <td>${tableDataToSort[i - 1].Name}</td>\n      <td>${tableDataToSort[i - 1].Position}</td>\n      <td>${tableDataToSort[i - 1].Age}</td>\n      <td>${tableDataToSort[i - 1].Salary}</td>\n    `;\n  }\n};\n\ntableHead.addEventListener('click', sortingColumn);\n"]}